var osapi=osapi||{};osapi.newBatch=function(){var e=function(j,g){var i={};var f=function(){var l=false;return{down:function(){if(!l){j--;if(j===0){l=true;g(i)}}}}}();var h=function(m){for(var l in m){if(m.hasOwnProperty(l)){i[l]=m[l]}}f.down()};var k=function(n,l,m){i[n]=l;if(m){osapi.base.setGlobalError(i,m.error)}f.down()};return{finishedJsonRequest:h,finishProxiedRequest:k}};var b=function(f){window.setTimeout(function(){f({data:{}})},0)};var d=function(f,h){for(var g=0;g<f.length;g++){h.apply(null,[f[g]])}};var a=function(g,h,f){osapi.newBatchJsonRequest(g,h).execute(function(i){f.finishedJsonRequest(i)})};var c=function(g,f){if(g.length>0){var h=function(i){i.request.execute(function(j){if(j.error){f.finishProxiedRequest(i.key,{error:{code:osapi.base.translateHttpError("Error "+j.error.code),message:j.error.message}},true)}else{if(j.data){f.finishProxiedRequest(i.key,j.data)}}})};d(g,h)}};return function(){var k={};var f=[];var h=[];var m=function(n,o){if(o.isMakeRequest){h.push({key:n,request:o})}else{f.push({key:n,request:o})}return k};var g=function(){var q=[];for(var o=0;o<f.length;o++){var p=f[o];var n=p.request.json()[0];n.id=p.key;q.push(n)}return q};var j=function(n){var q={};var s=n.data;for(var p=0;p<f.length;p++){var o=s[p];if(o.error){var r={error:{code:osapi.base.translateHttpError("Error "+o.error.code),message:o.error.message}};q[o.id]=r;osapi.base.setGlobalError(q,r.error)}else{if(o.id!==f[p].key){throw"Response Id doesn't match request key"}else{if(o.data.list){q[o.id]=o.data.list}else{q[o.id]=o.data}}}}return q};var i=function(n){var p=((f.length>0)?1:0)+h.length;var o=e(p,n);a(g,j,o);c(h,o)};var l=function(n){if(f.length==0&&h.length==0){b(n)}else{i(n)}};k.execute=l;k.add=m;return k}}();