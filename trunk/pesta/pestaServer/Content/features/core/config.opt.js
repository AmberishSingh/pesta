var gadgets=gadgets||{};gadgets.config=function(){var a=[];return{register:function(d,c,b){var e=a[d];if(!e){e=[];a[d]=e}e.push({validators:c||{},callback:b})},get:function(b){if(b){return configuration[b]||{}}return configuration},init:function(d,m){configuration=d;for(var b in a){if(a.hasOwnProperty(b)){var c=a[b],h=d[b];for(var g=0,f=c.length;g<f;++g){var k=c[g];if(h&&!m){var e=k.validators;for(var l in e){if(e.hasOwnProperty(l)){if(!e[l](h[l])){throw new Error('Invalid config value "'+h[l]+'" for parameter "'+l+'" in component "'+b+'"')}}}}if(k.callback){k.callback(d)}}}}},EnumValidator:function(e){var d=[];if(arguments.length>1){for(var c=0,b;b=arguments[c];++c){d.push(b)}}else{d=e}return function(g){for(var f=0,h;h=d[f];++f){if(g===d[f]){return true}}}},RegExValidator:function(b){return function(c){return b.test(c)}},ExistsValidator:function(b){return typeof b!=="undefined"},NonEmptyStringValidator:function(b){return typeof b==="string"&&b.length>0},BooleanValidator:function(b){return typeof b==="boolean"},LikeValidator:function(b){return function(d){for(var e in b){if(b.hasOwnProperty(e)){var c=b[e];if(!c(d[e])){return false}}}return true}}}}();