opensocial.data.ATTR_KEY="key";opensocial.data.SCRIPT_TYPE="text/os-data";opensocial.data.NSMAP={};opensocial.data.VAR_REGEX=/^([\w\W]*?)(\$\{[^\}]*\})([\w\W]*)$/;opensocial.data.RequestDescriptor=function(c){this.tagName=c.tagName;this.tagParts=this.tagName.split(":");this.attributes={};this.dependencies=false;for(var b=0;b<c.attributes.length;++b){var a=c.attributes[b].nodeName;if(a){var d=c.getAttribute(a);if(a&&d){this.attributes[a]=d;this.computeNeededKeys_(d)}}}this.key=this.attributes[opensocial.data.ATTR_KEY];this.register_()};opensocial.data.RequestDescriptor.prototype.hasAttribute=function(a){return !!this.attributes[a]};opensocial.data.RequestDescriptor.prototype.getAttribute=function(b){var a=this.attributes[b];if(!a){return a}var c=opensocial.data.parseExpression_(a);if(!c){return a}return opensocial.data.DataContext.evalExpression(c)};opensocial.data.parseExpression_=function(c){if(!c.length){return null}var a=opensocial.data.VAR_REGEX;var f=c;var e=[];var b=f.match(a);if(!b){return null}while(b){if(b[1].length>0){e.push(opensocial.data.transformLiteral_(b[1]))}var d=b[2].substring(2,b[2].length-1);e.push("("+d+")");f=b[3];b=f.match(a)}if(f.length>0){e.push(opensocial.data.transformLiteral_(f))}return e.join("+")};opensocial.data.transformLiteral_=function(a){return"'"+a.replace(/'/g,"\\'").replace(/\n/g," ")+"'"};opensocial.data.RequestDescriptor.prototype.sendRequest=function(){var b=opensocial.data.NSMAP[this.tagParts[0]];var a=null;if(b){a=b[this.tagParts[1]]}if(!a){throw"Data handler undefined for "+this.tagName}a(this)};opensocial.data.RequestDescriptor.prototype.getSendRequestClosure=function(){var a=this;return function(){a.sendRequest()}};opensocial.data.RequestDescriptor.prototype.computeNeededKeys_=function(e){var a=opensocial.data.VAR_REGEX;var b=e.match(a);while(b){var d=b[2].substring(2,b[2].length-1);var c=d.split(".")[0];if(!this.neededKeys){this.neededKeys={}}this.neededKeys[c]=true;b=b[3].match(a)}};opensocial.data.RequestDescriptor.prototype.register_=function(){opensocial.data.registerRequestDescriptor(this)};opensocial.data.DataContext.evalExpression=function(a){return(new Function("context","with (context) return "+a))(opensocial.data.DataContext.getData())};opensocial.data.requests_={};opensocial.data.registerRequestDescriptor=function(a){if(opensocial.data.requests_[a.key]){throw"Request already registered for "+a.key}opensocial.data.requests_[a.key]=a};opensocial.data.currentAPIRequest_=null;opensocial.data.currentAPIRequestKeys_=null;opensocial.data.currentAPIRequestCallbacks_=null;opensocial.data.getCurrentAPIRequest=function(){if(!opensocial.data.currentAPIRequest_){opensocial.data.currentAPIRequest_=opensocial.newDataRequest();opensocial.data.currentAPIRequestKeys_=[];opensocial.data.currentAPIRequestCallbacks_={}}return opensocial.data.currentAPIRequest_};opensocial.data.addToCurrentAPIRequest=function(c,b,a){opensocial.data.getCurrentAPIRequest().add(c,b);opensocial.data.currentAPIRequestKeys_.push(b);if(a){opensocial.data.currentAPIRequestCallbacks_[b]=a}window.setTimeout(opensocial.data.sendCurrentAPIRequest_,0)};opensocial.data.sendCurrentAPIRequest_=function(){if(opensocial.data.currentAPIRequest_){opensocial.data.currentAPIRequest_.send(opensocial.data.createSharedRequestCallback_());opensocial.data.currentAPIRequest_=null}};opensocial.data.createSharedRequestCallback_=function(){var b=opensocial.data.currentAPIRequestKeys_;var a=opensocial.data.currentAPIRequestCallbacks_;return function(c){opensocial.data.onAPIResponse(c,b,a)}};opensocial.data.onAPIResponse=function(f,e,d){for(var b=0;b<e.length;b++){var a=e[b];var c=f.get(a);if(d[a]){d[a](a,c)}else{opensocial.data.DataContext.putDataSet(a,c)}}};opensocial.data.registerRequestHandler=function(b,d){var a=b.split(":");var c=opensocial.data.NSMAP[a[0]];if(!c){if(!opensocial.xmlutil.NSMAP[a[0]]){opensocial.xmlutil.NSMAP[a[0]]=null}c=opensocial.data.NSMAP[a[0]]={}}else{if(c[a[1]]){throw"Request handler "+a[1]+" is already defined."}}c[a[1]]=d};opensocial.data.processDocumentMarkup=function(d){var e=d||document;var a=e.getElementsByTagName("script");for(var b=0;b<a.length;++b){var c=a[b];if(c.type==opensocial.data.SCRIPT_TYPE){opensocial.data.loadRequests(c)}}opensocial.data.registerRequestDependencies();opensocial.data.executeRequests()};if(window.gadgets&&window.gadgets["util"]){gadgets.util.registerOnLoadHandler(opensocial.data.processDocumentMarkup)}opensocial.data.loadRequests=function(a){if(typeof(a)=="string"){opensocial.data.loadRequestsFromMarkup_(a);return}var b=a;a=b.value||b.innerHTML;opensocial.data.loadRequestsFromMarkup_(a)};opensocial.data.loadRequestsFromMarkup_=function(a){a=opensocial.xmlutil.prepareXML(a);var c=opensocial.xmlutil.parseXML(a);var b=c.firstChild;while(b.nodeType!=1){b=b.nextSibling}opensocial.data.processDataNode_(b)};opensocial.data.processDataNode_=function(a){for(var c=a.firstChild;c;c=c.nextSibling){if(c.nodeType==1){var b=new opensocial.data.RequestDescriptor(c)}}};opensocial.data.registerRequestDependencies=function(){for(var a in opensocial.data.requests_){var c=opensocial.data.requests_[a];var e=c.neededKeys;var d=[];for(var b in e){if(opensocial.data.DataContext.getDataSet(b)==null&&opensocial.data.requests_[b]){d.push(b)}}if(d.length>0){opensocial.data.DataContext.registerListener(d,c.getSendRequestClosure());c.dependencies=true}}};opensocial.data.executeRequests=function(){for(var a in opensocial.data.requests_){var b=opensocial.data.requests_[a];if(!b.dependencies){b.sendRequest()}}};opensocial.data.transformSpecialValue=function(a){if(a.substring(0,1)=="@"){return a.substring(1).toUpperCase()}return a};(function(){opensocial.data.registerRequestHandler("os:ViewerRequest",function(b){var a=opensocial.data.getCurrentAPIRequest().newFetchPersonRequest("VIEWER");opensocial.data.addToCurrentAPIRequest(a,b.key)});opensocial.data.registerRequestHandler("os:OwnerRequest",function(b){var a=opensocial.data.getCurrentAPIRequest().newFetchPersonRequest("OWNER");opensocial.data.addToCurrentAPIRequest(a,b.key)});opensocial.data.registerRequestHandler("os:PeopleRequest",function(e){var c=e.getAttribute("userId");var b=e.getAttribute("groupId")||"@self";var a={};a.userId=opensocial.data.transformSpecialValue(c);if(b!="@self"){a.groupId=opensocial.data.transformSpecialValue(b)}var d=opensocial.data.getCurrentAPIRequest().newFetchPeopleRequest(opensocial.newIdSpec(a));opensocial.data.addToCurrentAPIRequest(d,e.key)});opensocial.data.registerRequestHandler("os:ActivitiesRequest",function(e){var c=e.getAttribute("userId");var b=e.getAttribute("groupId")||"@self";var a={};a.userId=opensocial.data.transformSpecialValue(c);if(b!="@self"){a.groupId=opensocial.data.transformSpecialValue(b)}var d=opensocial.data.getCurrentAPIRequest().newFetchActivitiesRequest(opensocial.newIdSpec(a));opensocial.data.addToCurrentAPIRequest(d,e.key)});opensocial.data.registerRequestHandler("os:HttpRequest",function(c){var a=c.getAttribute("href");var b=c.getAttribute("format")||"json";var d={};d[gadgets.io.RequestParameters.CONTENT_TYPE]=b.toLowerCase()=="text"?gadgets.io.ContentType.TEXT:gadgets.io.ContentType.JSON;d[gadgets.io.RequestParameters.METHOD]=gadgets.io.MethodType.GET;gadgets.io.makeRequest(a,function(e){opensocial.data.DataContext.putDataSet(c.key,e.data)},d)})})();(opensocial.data.populateParams_=function(){if(window.gadgets&&gadgets.util.hasFeature("views")){opensocial.data.DataContext.putDataSet("ViewParams",gadgets.views.getParams())}})();