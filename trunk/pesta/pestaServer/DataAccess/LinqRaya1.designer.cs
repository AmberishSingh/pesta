#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace pestaServer.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="raya")]
	public partial class LinqRayaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertactivity(activity instance);
    partial void Updateactivity(activity instance);
    partial void Deleteactivity(activity instance);
    partial void Insertperson(person instance);
    partial void Updateperson(person instance);
    partial void Deleteperson(person instance);
    partial void Insertactivity_media_item(activity_media_item instance);
    partial void Updateactivity_media_item(activity_media_item instance);
    partial void Deleteactivity_media_item(activity_media_item instance);
    partial void Insertaddress(address instance);
    partial void Updateaddress(address instance);
    partial void Deleteaddress(address instance);
    partial void Insertapplication_setting(application_setting instance);
    partial void Updateapplication_setting(application_setting instance);
    partial void Deleteapplication_setting(application_setting instance);
    partial void Insertapplication(application instance);
    partial void Updateapplication(application instance);
    partial void Deleteapplication(application instance);
    partial void Insertauthenticated(authenticated instance);
    partial void Updateauthenticated(authenticated instance);
    partial void Deleteauthenticated(authenticated instance);
    partial void Insertfriend_request(friend_request instance);
    partial void Updatefriend_request(friend_request instance);
    partial void Deletefriend_request(friend_request instance);
    partial void Insertfriend(friend instance);
    partial void Updatefriend(friend instance);
    partial void Deletefriend(friend instance);
    partial void Insertlanguage(language instance);
    partial void Updatelanguage(language instance);
    partial void Deletelanguage(language instance);
    partial void Insertmessage(message instance);
    partial void Updatemessage(message instance);
    partial void Deletemessage(message instance);
    partial void Insertoauth_consumer(oauth_consumer instance);
    partial void Updateoauth_consumer(oauth_consumer instance);
    partial void Deleteoauth_consumer(oauth_consumer instance);
    partial void Insertoauth_nonce(oauth_nonce instance);
    partial void Updateoauth_nonce(oauth_nonce instance);
    partial void Deleteoauth_nonce(oauth_nonce instance);
    partial void Insertoauth_token(oauth_token instance);
    partial void Updateoauth_token(oauth_token instance);
    partial void Deleteoauth_token(oauth_token instance);
    partial void Insertorganization(organization instance);
    partial void Updateorganization(organization instance);
    partial void Deleteorganization(organization instance);
    partial void Insertperson_application(person_application instance);
    partial void Updateperson_application(person_application instance);
    partial void Deleteperson_application(person_application instance);
    #endregion
		
		public LinqRayaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["rayaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqRayaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqRayaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqRayaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqRayaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<activity> activities
		{
			get
			{
				return this.GetTable<activity>();
			}
		}
		
		public System.Data.Linq.Table<person> persons
		{
			get
			{
				return this.GetTable<person>();
			}
		}
		
		public System.Data.Linq.Table<activity_media_item> activity_media_items
		{
			get
			{
				return this.GetTable<activity_media_item>();
			}
		}
		
		public System.Data.Linq.Table<address> addresses
		{
			get
			{
				return this.GetTable<address>();
			}
		}
		
		public System.Data.Linq.Table<application_setting> application_settings
		{
			get
			{
				return this.GetTable<application_setting>();
			}
		}
		
		public System.Data.Linq.Table<application> applications
		{
			get
			{
				return this.GetTable<application>();
			}
		}
		
		public System.Data.Linq.Table<authenticated> authenticateds
		{
			get
			{
				return this.GetTable<authenticated>();
			}
		}
		
		public System.Data.Linq.Table<friend_request> friend_requests
		{
			get
			{
				return this.GetTable<friend_request>();
			}
		}
		
		public System.Data.Linq.Table<friend> friends
		{
			get
			{
				return this.GetTable<friend>();
			}
		}
		
		public System.Data.Linq.Table<language> languages
		{
			get
			{
				return this.GetTable<language>();
			}
		}
		
		public System.Data.Linq.Table<message> messages
		{
			get
			{
				return this.GetTable<message>();
			}
		}
		
		public System.Data.Linq.Table<oauth_consumer> oauth_consumers
		{
			get
			{
				return this.GetTable<oauth_consumer>();
			}
		}
		
		public System.Data.Linq.Table<oauth_nonce> oauth_nonces
		{
			get
			{
				return this.GetTable<oauth_nonce>();
			}
		}
		
		public System.Data.Linq.Table<oauth_token> oauth_tokens
		{
			get
			{
				return this.GetTable<oauth_token>();
			}
		}
		
		public System.Data.Linq.Table<organization> organizations
		{
			get
			{
				return this.GetTable<organization>();
			}
		}
		
		public System.Data.Linq.Table<person_activity> person_activities
		{
			get
			{
				return this.GetTable<person_activity>();
			}
		}
		
		public System.Data.Linq.Table<person_address> person_addresses
		{
			get
			{
				return this.GetTable<person_address>();
			}
		}
		
		public System.Data.Linq.Table<person_application> person_applications
		{
			get
			{
				return this.GetTable<person_application>();
			}
		}
		
		public System.Data.Linq.Table<person_body_type> person_body_types
		{
			get
			{
				return this.GetTable<person_body_type>();
			}
		}
		
		public System.Data.Linq.Table<person_book> person_books
		{
			get
			{
				return this.GetTable<person_book>();
			}
		}
		
		public System.Data.Linq.Table<person_car> person_cars
		{
			get
			{
				return this.GetTable<person_car>();
			}
		}
		
		public System.Data.Linq.Table<person_current_location> person_current_locations
		{
			get
			{
				return this.GetTable<person_current_location>();
			}
		}
		
		public System.Data.Linq.Table<person_email> person_emails
		{
			get
			{
				return this.GetTable<person_email>();
			}
		}
		
		public System.Data.Linq.Table<person_food> person_foods
		{
			get
			{
				return this.GetTable<person_food>();
			}
		}
		
		public System.Data.Linq.Table<person_heroe> person_heroes
		{
			get
			{
				return this.GetTable<person_heroe>();
			}
		}
		
		public System.Data.Linq.Table<person_interest> person_interests
		{
			get
			{
				return this.GetTable<person_interest>();
			}
		}
		
		public System.Data.Linq.Table<person_job> person_jobs
		{
			get
			{
				return this.GetTable<person_job>();
			}
		}
		
		public System.Data.Linq.Table<person_languages_spoken> person_languages_spokens
		{
			get
			{
				return this.GetTable<person_languages_spoken>();
			}
		}
		
		public System.Data.Linq.Table<person_movy> person_movies
		{
			get
			{
				return this.GetTable<person_movy>();
			}
		}
		
		public System.Data.Linq.Table<person_music> person_musics
		{
			get
			{
				return this.GetTable<person_music>();
			}
		}
		
		public System.Data.Linq.Table<person_phone_number> person_phone_numbers
		{
			get
			{
				return this.GetTable<person_phone_number>();
			}
		}
		
		public System.Data.Linq.Table<person_quote> person_quotes
		{
			get
			{
				return this.GetTable<person_quote>();
			}
		}
		
		public System.Data.Linq.Table<person_school> person_schools
		{
			get
			{
				return this.GetTable<person_school>();
			}
		}
		
		public System.Data.Linq.Table<person_sport> person_sports
		{
			get
			{
				return this.GetTable<person_sport>();
			}
		}
		
		public System.Data.Linq.Table<person_tag> person_tags
		{
			get
			{
				return this.GetTable<person_tag>();
			}
		}
		
		public System.Data.Linq.Table<person_turn_off> person_turn_offs
		{
			get
			{
				return this.GetTable<person_turn_off>();
			}
		}
		
		public System.Data.Linq.Table<person_turn_on> person_turn_ons
		{
			get
			{
				return this.GetTable<person_turn_on>();
			}
		}
		
		public System.Data.Linq.Table<person_tv_show> person_tv_shows
		{
			get
			{
				return this.GetTable<person_tv_show>();
			}
		}
		
		public System.Data.Linq.Table<person_url> person_urls
		{
			get
			{
				return this.GetTable<person_url>();
			}
		}
	}
	
	[Table(Name="dbo.activities")]
	public partial class activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _person_id;
		
		private int _app_id;
		
		private string _title;
		
		private string _body;
		
		private long _created;
		
		private EntitySet<activity_media_item> _activity_media_items;
		
		private EntityRef<person> _person;
		
		private EntityRef<application> _application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onperson_idChanging(int value);
    partial void Onperson_idChanged();
    partial void Onapp_idChanging(int value);
    partial void Onapp_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OncreatedChanging(long value);
    partial void OncreatedChanged();
    #endregion
		
		public activity()
		{
			this._activity_media_items = new EntitySet<activity_media_item>(new Action<activity_media_item>(this.attach_activity_media_items), new Action<activity_media_item>(this.detach_activity_media_items));
			this._person = default(EntityRef<person>);
			this._application = default(EntityRef<application>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					if (this._person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onperson_idChanging(value);
					this.SendPropertyChanging();
					this._person_id = value;
					this.SendPropertyChanged("person_id");
					this.Onperson_idChanged();
				}
			}
		}
		
		[Column(Storage="_app_id", DbType="Int NOT NULL")]
		public int app_id
		{
			get
			{
				return this._app_id;
			}
			set
			{
				if ((this._app_id != value))
				{
					if (this._application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onapp_idChanging(value);
					this.SendPropertyChanging();
					this._app_id = value;
					this.SendPropertyChanged("app_id");
					this.Onapp_idChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_body", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[Column(Storage="_created", DbType="BigInt NOT NULL")]
		public long created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[Association(Name="activity_activity_media_item", Storage="_activity_media_items", ThisKey="id", OtherKey="activity_id")]
		public EntitySet<activity_media_item> activity_media_items
		{
			get
			{
				return this._activity_media_items;
			}
			set
			{
				this._activity_media_items.Assign(value);
			}
		}
		
		[Association(Name="person_activity", Storage="_person", ThisKey="person_id", OtherKey="id", IsForeignKey=true)]
		public person person
		{
			get
			{
				return this._person.Entity;
			}
			set
			{
				person previousValue = this._person.Entity;
				if (((previousValue != value) 
							|| (this._person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._person.Entity = null;
						previousValue.activities.Remove(this);
					}
					this._person.Entity = value;
					if ((value != null))
					{
						value.activities.Add(this);
						this._person_id = value.id;
					}
					else
					{
						this._person_id = default(int);
					}
					this.SendPropertyChanged("person");
				}
			}
		}
		
		[Association(Name="application_activity", Storage="_application", ThisKey="app_id", OtherKey="id", IsForeignKey=true)]
		public application application
		{
			get
			{
				return this._application.Entity;
			}
			set
			{
				application previousValue = this._application.Entity;
				if (((previousValue != value) 
							|| (this._application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._application.Entity = null;
						previousValue.activities.Remove(this);
					}
					this._application.Entity = value;
					if ((value != null))
					{
						value.activities.Add(this);
						this._app_id = value.id;
					}
					else
					{
						this._app_id = default(int);
					}
					this.SendPropertyChanged("application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_activity_media_items(activity_media_item entity)
		{
			this.SendPropertyChanging();
			entity.activity = this;
		}
		
		private void detach_activity_media_items(activity_media_item entity)
		{
			this.SendPropertyChanging();
			entity.activity = null;
		}
	}
	
	[Table(Name="dbo.persons")]
	public partial class person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _email;
		
		private string _password;
		
		private string _about_me;
		
		private System.Nullable<int> _age;
		
		private string _children;
		
		private System.Nullable<long> _date_of_birth;
		
		private string _drinker;
		
		private string _ethnicity;
		
		private string _fashion;
		
		private string _gender;
		
		private string _happiest_when;
		
		private string _humor;
		
		private string _job_interests;
		
		private string _living_arrangement;
		
		private string _looking_for;
		
		private string _nickname;
		
		private string _pets;
		
		private string _political_views;
		
		private string _profile_song;
		
		private string _profile_url;
		
		private string _profile_video;
		
		private string _relationship_status;
		
		private string _religion;
		
		private string _romance;
		
		private string _scared_of;
		
		private string _sexual_orientation;
		
		private string _smoker;
		
		private string _status;
		
		private string _thumbnail_url;
		
		private System.Nullable<long> _time_zone;
		
		private string _first_name;
		
		private string _last_name;
		
		private EntitySet<activity> _activities;
		
		private EntitySet<application_setting> _application_settings;
		
		private EntitySet<authenticated> _authenticateds;
		
		private EntityRef<friend_request> _friend_request;
		
		private EntityRef<friend> _friend;
		
		private EntitySet<message> _messages;
		
		private EntitySet<message> _messages1;
		
		private EntitySet<person_application> _person_applications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onabout_meChanging(string value);
    partial void Onabout_meChanged();
    partial void OnageChanging(System.Nullable<int> value);
    partial void OnageChanged();
    partial void OnchildrenChanging(string value);
    partial void OnchildrenChanged();
    partial void Ondate_of_birthChanging(System.Nullable<long> value);
    partial void Ondate_of_birthChanged();
    partial void OndrinkerChanging(string value);
    partial void OndrinkerChanged();
    partial void OnethnicityChanging(string value);
    partial void OnethnicityChanged();
    partial void OnfashionChanging(string value);
    partial void OnfashionChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void Onhappiest_whenChanging(string value);
    partial void Onhappiest_whenChanged();
    partial void OnhumorChanging(string value);
    partial void OnhumorChanged();
    partial void Onjob_interestsChanging(string value);
    partial void Onjob_interestsChanged();
    partial void Onliving_arrangementChanging(string value);
    partial void Onliving_arrangementChanged();
    partial void Onlooking_forChanging(string value);
    partial void Onlooking_forChanged();
    partial void OnnicknameChanging(string value);
    partial void OnnicknameChanged();
    partial void OnpetsChanging(string value);
    partial void OnpetsChanged();
    partial void Onpolitical_viewsChanging(string value);
    partial void Onpolitical_viewsChanged();
    partial void Onprofile_songChanging(string value);
    partial void Onprofile_songChanged();
    partial void Onprofile_urlChanging(string value);
    partial void Onprofile_urlChanged();
    partial void Onprofile_videoChanging(string value);
    partial void Onprofile_videoChanged();
    partial void Onrelationship_statusChanging(string value);
    partial void Onrelationship_statusChanged();
    partial void OnreligionChanging(string value);
    partial void OnreligionChanged();
    partial void OnromanceChanging(string value);
    partial void OnromanceChanged();
    partial void Onscared_ofChanging(string value);
    partial void Onscared_ofChanged();
    partial void Onsexual_orientationChanging(string value);
    partial void Onsexual_orientationChanged();
    partial void OnsmokerChanging(string value);
    partial void OnsmokerChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onthumbnail_urlChanging(string value);
    partial void Onthumbnail_urlChanged();
    partial void Ontime_zoneChanging(System.Nullable<long> value);
    partial void Ontime_zoneChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    #endregion
		
		public person()
		{
			this._activities = new EntitySet<activity>(new Action<activity>(this.attach_activities), new Action<activity>(this.detach_activities));
			this._application_settings = new EntitySet<application_setting>(new Action<application_setting>(this.attach_application_settings), new Action<application_setting>(this.detach_application_settings));
			this._authenticateds = new EntitySet<authenticated>(new Action<authenticated>(this.attach_authenticateds), new Action<authenticated>(this.detach_authenticateds));
			this._friend_request = default(EntityRef<friend_request>);
			this._friend = default(EntityRef<friend>);
			this._messages = new EntitySet<message>(new Action<message>(this.attach_messages), new Action<message>(this.detach_messages));
			this._messages1 = new EntitySet<message>(new Action<message>(this.attach_messages1), new Action<message>(this.detach_messages1));
			this._person_applications = new EntitySet<person_application>(new Action<person_application>(this.attach_person_applications), new Action<person_application>(this.detach_person_applications));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_email", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[Column(Storage="_password", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[Column(Storage="_about_me", DbType="VarChar(MAX)")]
		public string about_me
		{
			get
			{
				return this._about_me;
			}
			set
			{
				if ((this._about_me != value))
				{
					this.Onabout_meChanging(value);
					this.SendPropertyChanging();
					this._about_me = value;
					this.SendPropertyChanged("about_me");
					this.Onabout_meChanged();
				}
			}
		}
		
		[Column(Storage="_age", DbType="Int")]
		public System.Nullable<int> age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[Column(Storage="_children", DbType="VarChar(128)")]
		public string children
		{
			get
			{
				return this._children;
			}
			set
			{
				if ((this._children != value))
				{
					this.OnchildrenChanging(value);
					this.SendPropertyChanging();
					this._children = value;
					this.SendPropertyChanged("children");
					this.OnchildrenChanged();
				}
			}
		}
		
		[Column(Storage="_date_of_birth", DbType="BigInt")]
		public System.Nullable<long> date_of_birth
		{
			get
			{
				return this._date_of_birth;
			}
			set
			{
				if ((this._date_of_birth != value))
				{
					this.Ondate_of_birthChanging(value);
					this.SendPropertyChanging();
					this._date_of_birth = value;
					this.SendPropertyChanged("date_of_birth");
					this.Ondate_of_birthChanged();
				}
			}
		}
		
		[Column(Storage="_drinker", DbType="VarChar(16)")]
		public string drinker
		{
			get
			{
				return this._drinker;
			}
			set
			{
				if ((this._drinker != value))
				{
					this.OndrinkerChanging(value);
					this.SendPropertyChanging();
					this._drinker = value;
					this.SendPropertyChanged("drinker");
					this.OndrinkerChanged();
				}
			}
		}
		
		[Column(Storage="_ethnicity", DbType="VarChar(128)")]
		public string ethnicity
		{
			get
			{
				return this._ethnicity;
			}
			set
			{
				if ((this._ethnicity != value))
				{
					this.OnethnicityChanging(value);
					this.SendPropertyChanging();
					this._ethnicity = value;
					this.SendPropertyChanged("ethnicity");
					this.OnethnicityChanged();
				}
			}
		}
		
		[Column(Storage="_fashion", DbType="VarChar(MAX)")]
		public string fashion
		{
			get
			{
				return this._fashion;
			}
			set
			{
				if ((this._fashion != value))
				{
					this.OnfashionChanging(value);
					this.SendPropertyChanging();
					this._fashion = value;
					this.SendPropertyChanged("fashion");
					this.OnfashionChanged();
				}
			}
		}
		
		[Column(Storage="_gender", DbType="VarChar(8)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[Column(Storage="_happiest_when", DbType="VarChar(MAX)")]
		public string happiest_when
		{
			get
			{
				return this._happiest_when;
			}
			set
			{
				if ((this._happiest_when != value))
				{
					this.Onhappiest_whenChanging(value);
					this.SendPropertyChanging();
					this._happiest_when = value;
					this.SendPropertyChanged("happiest_when");
					this.Onhappiest_whenChanged();
				}
			}
		}
		
		[Column(Storage="_humor", DbType="VarChar(MAX)")]
		public string humor
		{
			get
			{
				return this._humor;
			}
			set
			{
				if ((this._humor != value))
				{
					this.OnhumorChanging(value);
					this.SendPropertyChanging();
					this._humor = value;
					this.SendPropertyChanged("humor");
					this.OnhumorChanged();
				}
			}
		}
		
		[Column(Storage="_job_interests", DbType="VarChar(MAX)")]
		public string job_interests
		{
			get
			{
				return this._job_interests;
			}
			set
			{
				if ((this._job_interests != value))
				{
					this.Onjob_interestsChanging(value);
					this.SendPropertyChanging();
					this._job_interests = value;
					this.SendPropertyChanged("job_interests");
					this.Onjob_interestsChanged();
				}
			}
		}
		
		[Column(Storage="_living_arrangement", DbType="VarChar(128)")]
		public string living_arrangement
		{
			get
			{
				return this._living_arrangement;
			}
			set
			{
				if ((this._living_arrangement != value))
				{
					this.Onliving_arrangementChanging(value);
					this.SendPropertyChanging();
					this._living_arrangement = value;
					this.SendPropertyChanged("living_arrangement");
					this.Onliving_arrangementChanged();
				}
			}
		}
		
		[Column(Storage="_looking_for", DbType="VarChar(128)")]
		public string looking_for
		{
			get
			{
				return this._looking_for;
			}
			set
			{
				if ((this._looking_for != value))
				{
					this.Onlooking_forChanging(value);
					this.SendPropertyChanging();
					this._looking_for = value;
					this.SendPropertyChanged("looking_for");
					this.Onlooking_forChanged();
				}
			}
		}
		
		[Column(Storage="_nickname", DbType="VarChar(128)")]
		public string nickname
		{
			get
			{
				return this._nickname;
			}
			set
			{
				if ((this._nickname != value))
				{
					this.OnnicknameChanging(value);
					this.SendPropertyChanging();
					this._nickname = value;
					this.SendPropertyChanged("nickname");
					this.OnnicknameChanged();
				}
			}
		}
		
		[Column(Storage="_pets", DbType="VarChar(128)")]
		public string pets
		{
			get
			{
				return this._pets;
			}
			set
			{
				if ((this._pets != value))
				{
					this.OnpetsChanging(value);
					this.SendPropertyChanging();
					this._pets = value;
					this.SendPropertyChanged("pets");
					this.OnpetsChanged();
				}
			}
		}
		
		[Column(Storage="_political_views", DbType="VarChar(MAX)")]
		public string political_views
		{
			get
			{
				return this._political_views;
			}
			set
			{
				if ((this._political_views != value))
				{
					this.Onpolitical_viewsChanging(value);
					this.SendPropertyChanging();
					this._political_views = value;
					this.SendPropertyChanged("political_views");
					this.Onpolitical_viewsChanged();
				}
			}
		}
		
		[Column(Storage="_profile_song", DbType="VarChar(128)")]
		public string profile_song
		{
			get
			{
				return this._profile_song;
			}
			set
			{
				if ((this._profile_song != value))
				{
					this.Onprofile_songChanging(value);
					this.SendPropertyChanging();
					this._profile_song = value;
					this.SendPropertyChanged("profile_song");
					this.Onprofile_songChanged();
				}
			}
		}
		
		[Column(Storage="_profile_url", DbType="VarChar(128)")]
		public string profile_url
		{
			get
			{
				return this._profile_url;
			}
			set
			{
				if ((this._profile_url != value))
				{
					this.Onprofile_urlChanging(value);
					this.SendPropertyChanging();
					this._profile_url = value;
					this.SendPropertyChanged("profile_url");
					this.Onprofile_urlChanged();
				}
			}
		}
		
		[Column(Storage="_profile_video", DbType="VarChar(128)")]
		public string profile_video
		{
			get
			{
				return this._profile_video;
			}
			set
			{
				if ((this._profile_video != value))
				{
					this.Onprofile_videoChanging(value);
					this.SendPropertyChanging();
					this._profile_video = value;
					this.SendPropertyChanged("profile_video");
					this.Onprofile_videoChanged();
				}
			}
		}
		
		[Column(Storage="_relationship_status", DbType="VarChar(128)")]
		public string relationship_status
		{
			get
			{
				return this._relationship_status;
			}
			set
			{
				if ((this._relationship_status != value))
				{
					this.Onrelationship_statusChanging(value);
					this.SendPropertyChanging();
					this._relationship_status = value;
					this.SendPropertyChanged("relationship_status");
					this.Onrelationship_statusChanged();
				}
			}
		}
		
		[Column(Storage="_religion", DbType="VarChar(128)")]
		public string religion
		{
			get
			{
				return this._religion;
			}
			set
			{
				if ((this._religion != value))
				{
					this.OnreligionChanging(value);
					this.SendPropertyChanging();
					this._religion = value;
					this.SendPropertyChanged("religion");
					this.OnreligionChanged();
				}
			}
		}
		
		[Column(Storage="_romance", DbType="VarChar(128)")]
		public string romance
		{
			get
			{
				return this._romance;
			}
			set
			{
				if ((this._romance != value))
				{
					this.OnromanceChanging(value);
					this.SendPropertyChanging();
					this._romance = value;
					this.SendPropertyChanged("romance");
					this.OnromanceChanged();
				}
			}
		}
		
		[Column(Storage="_scared_of", DbType="VarChar(MAX)")]
		public string scared_of
		{
			get
			{
				return this._scared_of;
			}
			set
			{
				if ((this._scared_of != value))
				{
					this.Onscared_ofChanging(value);
					this.SendPropertyChanging();
					this._scared_of = value;
					this.SendPropertyChanged("scared_of");
					this.Onscared_ofChanged();
				}
			}
		}
		
		[Column(Storage="_sexual_orientation", DbType="VarChar(128)")]
		public string sexual_orientation
		{
			get
			{
				return this._sexual_orientation;
			}
			set
			{
				if ((this._sexual_orientation != value))
				{
					this.Onsexual_orientationChanging(value);
					this.SendPropertyChanging();
					this._sexual_orientation = value;
					this.SendPropertyChanged("sexual_orientation");
					this.Onsexual_orientationChanged();
				}
			}
		}
		
		[Column(Storage="_smoker", DbType="VarChar(16)")]
		public string smoker
		{
			get
			{
				return this._smoker;
			}
			set
			{
				if ((this._smoker != value))
				{
					this.OnsmokerChanging(value);
					this.SendPropertyChanging();
					this._smoker = value;
					this.SendPropertyChanged("smoker");
					this.OnsmokerChanged();
				}
			}
		}
		
		[Column(Storage="_status", DbType="VarChar(128)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[Column(Storage="_thumbnail_url", DbType="VarChar(128)")]
		public string thumbnail_url
		{
			get
			{
				return this._thumbnail_url;
			}
			set
			{
				if ((this._thumbnail_url != value))
				{
					this.Onthumbnail_urlChanging(value);
					this.SendPropertyChanging();
					this._thumbnail_url = value;
					this.SendPropertyChanged("thumbnail_url");
					this.Onthumbnail_urlChanged();
				}
			}
		}
		
		[Column(Storage="_time_zone", DbType="BigInt")]
		public System.Nullable<long> time_zone
		{
			get
			{
				return this._time_zone;
			}
			set
			{
				if ((this._time_zone != value))
				{
					this.Ontime_zoneChanging(value);
					this.SendPropertyChanging();
					this._time_zone = value;
					this.SendPropertyChanged("time_zone");
					this.Ontime_zoneChanged();
				}
			}
		}
		
		[Column(Storage="_first_name", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[Column(Storage="_last_name", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[Association(Name="person_activity", Storage="_activities", ThisKey="id", OtherKey="person_id")]
		public EntitySet<activity> activities
		{
			get
			{
				return this._activities;
			}
			set
			{
				this._activities.Assign(value);
			}
		}
		
		[Association(Name="person_application_setting", Storage="_application_settings", ThisKey="id", OtherKey="person_id")]
		public EntitySet<application_setting> application_settings
		{
			get
			{
				return this._application_settings;
			}
			set
			{
				this._application_settings.Assign(value);
			}
		}
		
		[Association(Name="person_authenticated", Storage="_authenticateds", ThisKey="id", OtherKey="person_id")]
		public EntitySet<authenticated> authenticateds
		{
			get
			{
				return this._authenticateds;
			}
			set
			{
				this._authenticateds.Assign(value);
			}
		}
		
		[Association(Name="person_friend_request", Storage="_friend_request", ThisKey="id", OtherKey="person_id", IsUnique=true, IsForeignKey=false)]
		public friend_request friend_request
		{
			get
			{
				return this._friend_request.Entity;
			}
			set
			{
				friend_request previousValue = this._friend_request.Entity;
				if (((previousValue != value) 
							|| (this._friend_request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._friend_request.Entity = null;
						previousValue.person = null;
					}
					this._friend_request.Entity = value;
					if ((value != null))
					{
						value.person = this;
					}
					this.SendPropertyChanged("friend_request");
				}
			}
		}
		
		[Association(Name="person_friend", Storage="_friend", ThisKey="id", OtherKey="person_id", IsUnique=true, IsForeignKey=false)]
		public friend friend
		{
			get
			{
				return this._friend.Entity;
			}
			set
			{
				friend previousValue = this._friend.Entity;
				if (((previousValue != value) 
							|| (this._friend.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._friend.Entity = null;
						previousValue.person = null;
					}
					this._friend.Entity = value;
					if ((value != null))
					{
						value.person = this;
					}
					this.SendPropertyChanged("friend");
				}
			}
		}
		
		[Association(Name="person_message", Storage="_messages", ThisKey="id", OtherKey="from")]
		public EntitySet<message> messages
		{
			get
			{
				return this._messages;
			}
			set
			{
				this._messages.Assign(value);
			}
		}
		
		[Association(Name="person_message1", Storage="_messages1", ThisKey="id", OtherKey="to")]
		public EntitySet<message> messages1
		{
			get
			{
				return this._messages1;
			}
			set
			{
				this._messages1.Assign(value);
			}
		}
		
		[Association(Name="person_person_application", Storage="_person_applications", ThisKey="id", OtherKey="person_id")]
		public EntitySet<person_application> person_applications
		{
			get
			{
				return this._person_applications;
			}
			set
			{
				this._person_applications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_activities(activity entity)
		{
			this.SendPropertyChanging();
			entity.person = this;
		}
		
		private void detach_activities(activity entity)
		{
			this.SendPropertyChanging();
			entity.person = null;
		}
		
		private void attach_application_settings(application_setting entity)
		{
			this.SendPropertyChanging();
			entity.person = this;
		}
		
		private void detach_application_settings(application_setting entity)
		{
			this.SendPropertyChanging();
			entity.person = null;
		}
		
		private void attach_authenticateds(authenticated entity)
		{
			this.SendPropertyChanging();
			entity.person = this;
		}
		
		private void detach_authenticateds(authenticated entity)
		{
			this.SendPropertyChanging();
			entity.person = null;
		}
		
		private void attach_messages(message entity)
		{
			this.SendPropertyChanging();
			entity.person = this;
		}
		
		private void detach_messages(message entity)
		{
			this.SendPropertyChanging();
			entity.person = null;
		}
		
		private void attach_messages1(message entity)
		{
			this.SendPropertyChanging();
			entity.person1 = this;
		}
		
		private void detach_messages1(message entity)
		{
			this.SendPropertyChanging();
			entity.person1 = null;
		}
		
		private void attach_person_applications(person_application entity)
		{
			this.SendPropertyChanging();
			entity.person = this;
		}
		
		private void detach_person_applications(person_application entity)
		{
			this.SendPropertyChanging();
			entity.person = null;
		}
	}
	
	[Table(Name="dbo.activity_media_items")]
	public partial class activity_media_item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _activity_id;
		
		private string _mime_type;
		
		private byte _media_type;
		
		private string _url;
		
		private EntityRef<activity> _activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onactivity_idChanging(int value);
    partial void Onactivity_idChanged();
    partial void Onmime_typeChanging(string value);
    partial void Onmime_typeChanged();
    partial void Onmedia_typeChanging(byte value);
    partial void Onmedia_typeChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    #endregion
		
		public activity_media_item()
		{
			this._activity = default(EntityRef<activity>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_activity_id", DbType="Int NOT NULL")]
		public int activity_id
		{
			get
			{
				return this._activity_id;
			}
			set
			{
				if ((this._activity_id != value))
				{
					if (this._activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onactivity_idChanging(value);
					this.SendPropertyChanging();
					this._activity_id = value;
					this.SendPropertyChanged("activity_id");
					this.Onactivity_idChanged();
				}
			}
		}
		
		[Column(Storage="_mime_type", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string mime_type
		{
			get
			{
				return this._mime_type;
			}
			set
			{
				if ((this._mime_type != value))
				{
					this.Onmime_typeChanging(value);
					this.SendPropertyChanging();
					this._mime_type = value;
					this.SendPropertyChanged("mime_type");
					this.Onmime_typeChanged();
				}
			}
		}
		
		[Column(Storage="_media_type", DbType="TinyInt NOT NULL")]
		public byte media_type
		{
			get
			{
				return this._media_type;
			}
			set
			{
				if ((this._media_type != value))
				{
					this.Onmedia_typeChanging(value);
					this.SendPropertyChanging();
					this._media_type = value;
					this.SendPropertyChanged("media_type");
					this.Onmedia_typeChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Association(Name="activity_activity_media_item", Storage="_activity", ThisKey="activity_id", OtherKey="id", IsForeignKey=true)]
		public activity activity
		{
			get
			{
				return this._activity.Entity;
			}
			set
			{
				activity previousValue = this._activity.Entity;
				if (((previousValue != value) 
							|| (this._activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._activity.Entity = null;
						previousValue.activity_media_items.Remove(this);
					}
					this._activity.Entity = value;
					if ((value != null))
					{
						value.activity_media_items.Add(this);
						this._activity_id = value.id;
					}
					else
					{
						this._activity_id = default(int);
					}
					this.SendPropertyChanged("activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.addresses")]
	public partial class address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _country;
		
		private string _extended_address;
		
		private System.Nullable<int> _latitude;
		
		private string _locality;
		
		private System.Nullable<int> _longitude;
		
		private string _po_box;
		
		private string _postal_code;
		
		private string _region;
		
		private string _street_address;
		
		private string _address_type;
		
		private string _unstructured_address;
		
		private EntitySet<organization> _organizations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void Onextended_addressChanging(string value);
    partial void Onextended_addressChanged();
    partial void OnlatitudeChanging(System.Nullable<int> value);
    partial void OnlatitudeChanged();
    partial void OnlocalityChanging(string value);
    partial void OnlocalityChanged();
    partial void OnlongitudeChanging(System.Nullable<int> value);
    partial void OnlongitudeChanged();
    partial void Onpo_boxChanging(string value);
    partial void Onpo_boxChanged();
    partial void Onpostal_codeChanging(string value);
    partial void Onpostal_codeChanged();
    partial void OnregionChanging(string value);
    partial void OnregionChanged();
    partial void Onstreet_addressChanging(string value);
    partial void Onstreet_addressChanged();
    partial void Onaddress_typeChanging(string value);
    partial void Onaddress_typeChanged();
    partial void Onunstructured_addressChanging(string value);
    partial void Onunstructured_addressChanged();
    #endregion
		
		public address()
		{
			this._organizations = new EntitySet<organization>(new Action<organization>(this.attach_organizations), new Action<organization>(this.detach_organizations));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_country", DbType="VarChar(128)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[Column(Storage="_extended_address", DbType="VarChar(128)")]
		public string extended_address
		{
			get
			{
				return this._extended_address;
			}
			set
			{
				if ((this._extended_address != value))
				{
					this.Onextended_addressChanging(value);
					this.SendPropertyChanging();
					this._extended_address = value;
					this.SendPropertyChanged("extended_address");
					this.Onextended_addressChanged();
				}
			}
		}
		
		[Column(Storage="_latitude", DbType="Int")]
		public System.Nullable<int> latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[Column(Storage="_locality", DbType="VarChar(128)")]
		public string locality
		{
			get
			{
				return this._locality;
			}
			set
			{
				if ((this._locality != value))
				{
					this.OnlocalityChanging(value);
					this.SendPropertyChanging();
					this._locality = value;
					this.SendPropertyChanged("locality");
					this.OnlocalityChanged();
				}
			}
		}
		
		[Column(Storage="_longitude", DbType="Int")]
		public System.Nullable<int> longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[Column(Storage="_po_box", DbType="VarChar(32)")]
		public string po_box
		{
			get
			{
				return this._po_box;
			}
			set
			{
				if ((this._po_box != value))
				{
					this.Onpo_boxChanging(value);
					this.SendPropertyChanging();
					this._po_box = value;
					this.SendPropertyChanged("po_box");
					this.Onpo_boxChanged();
				}
			}
		}
		
		[Column(Storage="_postal_code", DbType="VarChar(32)")]
		public string postal_code
		{
			get
			{
				return this._postal_code;
			}
			set
			{
				if ((this._postal_code != value))
				{
					this.Onpostal_codeChanging(value);
					this.SendPropertyChanging();
					this._postal_code = value;
					this.SendPropertyChanged("postal_code");
					this.Onpostal_codeChanged();
				}
			}
		}
		
		[Column(Storage="_region", DbType="VarChar(64)")]
		public string region
		{
			get
			{
				return this._region;
			}
			set
			{
				if ((this._region != value))
				{
					this.OnregionChanging(value);
					this.SendPropertyChanging();
					this._region = value;
					this.SendPropertyChanged("region");
					this.OnregionChanged();
				}
			}
		}
		
		[Column(Storage="_street_address", DbType="VarChar(128)")]
		public string street_address
		{
			get
			{
				return this._street_address;
			}
			set
			{
				if ((this._street_address != value))
				{
					this.Onstreet_addressChanging(value);
					this.SendPropertyChanging();
					this._street_address = value;
					this.SendPropertyChanged("street_address");
					this.Onstreet_addressChanged();
				}
			}
		}
		
		[Column(Storage="_address_type", DbType="VarChar(128)")]
		public string address_type
		{
			get
			{
				return this._address_type;
			}
			set
			{
				if ((this._address_type != value))
				{
					this.Onaddress_typeChanging(value);
					this.SendPropertyChanging();
					this._address_type = value;
					this.SendPropertyChanged("address_type");
					this.Onaddress_typeChanged();
				}
			}
		}
		
		[Column(Storage="_unstructured_address", DbType="VarChar(255)")]
		public string unstructured_address
		{
			get
			{
				return this._unstructured_address;
			}
			set
			{
				if ((this._unstructured_address != value))
				{
					this.Onunstructured_addressChanging(value);
					this.SendPropertyChanging();
					this._unstructured_address = value;
					this.SendPropertyChanged("unstructured_address");
					this.Onunstructured_addressChanged();
				}
			}
		}
		
		[Association(Name="address_organization", Storage="_organizations", ThisKey="id", OtherKey="address_id")]
		public EntitySet<organization> organizations
		{
			get
			{
				return this._organizations;
			}
			set
			{
				this._organizations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_organizations(organization entity)
		{
			this.SendPropertyChanging();
			entity.address = this;
		}
		
		private void detach_organizations(organization entity)
		{
			this.SendPropertyChanging();
			entity.address = null;
		}
	}
	
	[Table(Name="dbo.application_settings")]
	public partial class application_setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _asid;
		
		private int _application_id;
		
		private int _person_id;
		
		private string _name;
		
		private string _value;
		
		private EntityRef<person> _person;
		
		private EntityRef<application> _application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnasidChanging(int value);
    partial void OnasidChanged();
    partial void Onapplication_idChanging(int value);
    partial void Onapplication_idChanged();
    partial void Onperson_idChanging(int value);
    partial void Onperson_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public application_setting()
		{
			this._person = default(EntityRef<person>);
			this._application = default(EntityRef<application>);
			OnCreated();
		}
		
		[Column(Storage="_asid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int asid
		{
			get
			{
				return this._asid;
			}
			set
			{
				if ((this._asid != value))
				{
					this.OnasidChanging(value);
					this.SendPropertyChanging();
					this._asid = value;
					this.SendPropertyChanged("asid");
					this.OnasidChanged();
				}
			}
		}
		
		[Column(Storage="_application_id", DbType="Int NOT NULL")]
		public int application_id
		{
			get
			{
				return this._application_id;
			}
			set
			{
				if ((this._application_id != value))
				{
					if (this._application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onapplication_idChanging(value);
					this.SendPropertyChanging();
					this._application_id = value;
					this.SendPropertyChanged("application_id");
					this.Onapplication_idChanged();
				}
			}
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					if (this._person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onperson_idChanging(value);
					this.SendPropertyChanging();
					this._person_id = value;
					this.SendPropertyChanged("person_id");
					this.Onperson_idChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[Association(Name="person_application_setting", Storage="_person", ThisKey="person_id", OtherKey="id", IsForeignKey=true)]
		public person person
		{
			get
			{
				return this._person.Entity;
			}
			set
			{
				person previousValue = this._person.Entity;
				if (((previousValue != value) 
							|| (this._person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._person.Entity = null;
						previousValue.application_settings.Remove(this);
					}
					this._person.Entity = value;
					if ((value != null))
					{
						value.application_settings.Add(this);
						this._person_id = value.id;
					}
					else
					{
						this._person_id = default(int);
					}
					this.SendPropertyChanged("person");
				}
			}
		}
		
		[Association(Name="application_application_setting", Storage="_application", ThisKey="application_id", OtherKey="id", IsForeignKey=true)]
		public application application
		{
			get
			{
				return this._application.Entity;
			}
			set
			{
				application previousValue = this._application.Entity;
				if (((previousValue != value) 
							|| (this._application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._application.Entity = null;
						previousValue.application_settings.Remove(this);
					}
					this._application.Entity = value;
					if ((value != null))
					{
						value.application_settings.Add(this);
						this._application_id = value.id;
					}
					else
					{
						this._application_id = default(int);
					}
					this.SendPropertyChanged("application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.applications")]
	public partial class application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _url;
		
		private string _title;
		
		private string _directory_title;
		
		private string _screenshot;
		
		private string _thumbnail;
		
		private string _author;
		
		private string _author_email;
		
		private string _description;
		
		private string _settings;
		
		private string _views;
		
		private string _version;
		
		private int _height;
		
		private int _scrolling;
		
		private long _modified;
		
		private EntitySet<activity> _activities;
		
		private EntitySet<application_setting> _application_settings;
		
		private EntitySet<person_application> _person_applications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Ondirectory_titleChanging(string value);
    partial void Ondirectory_titleChanged();
    partial void OnscreenshotChanging(string value);
    partial void OnscreenshotChanged();
    partial void OnthumbnailChanging(string value);
    partial void OnthumbnailChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void Onauthor_emailChanging(string value);
    partial void Onauthor_emailChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnsettingsChanging(string value);
    partial void OnsettingsChanged();
    partial void OnviewsChanging(string value);
    partial void OnviewsChanged();
    partial void OnversionChanging(string value);
    partial void OnversionChanged();
    partial void OnheightChanging(int value);
    partial void OnheightChanged();
    partial void OnscrollingChanging(int value);
    partial void OnscrollingChanged();
    partial void OnmodifiedChanging(long value);
    partial void OnmodifiedChanged();
    #endregion
		
		public application()
		{
			this._activities = new EntitySet<activity>(new Action<activity>(this.attach_activities), new Action<activity>(this.detach_activities));
			this._application_settings = new EntitySet<application_setting>(new Action<application_setting>(this.attach_application_settings), new Action<application_setting>(this.detach_application_settings));
			this._person_applications = new EntitySet<person_application>(new Action<person_application>(this.attach_person_applications), new Action<person_application>(this.detach_person_applications));
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="VarChar(128)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_directory_title", DbType="VarChar(128)")]
		public string directory_title
		{
			get
			{
				return this._directory_title;
			}
			set
			{
				if ((this._directory_title != value))
				{
					this.Ondirectory_titleChanging(value);
					this.SendPropertyChanging();
					this._directory_title = value;
					this.SendPropertyChanged("directory_title");
					this.Ondirectory_titleChanged();
				}
			}
		}
		
		[Column(Storage="_screenshot", DbType="VarChar(128)")]
		public string screenshot
		{
			get
			{
				return this._screenshot;
			}
			set
			{
				if ((this._screenshot != value))
				{
					this.OnscreenshotChanging(value);
					this.SendPropertyChanging();
					this._screenshot = value;
					this.SendPropertyChanged("screenshot");
					this.OnscreenshotChanged();
				}
			}
		}
		
		[Column(Storage="_thumbnail", DbType="VarChar(128)")]
		public string thumbnail
		{
			get
			{
				return this._thumbnail;
			}
			set
			{
				if ((this._thumbnail != value))
				{
					this.OnthumbnailChanging(value);
					this.SendPropertyChanging();
					this._thumbnail = value;
					this.SendPropertyChanged("thumbnail");
					this.OnthumbnailChanged();
				}
			}
		}
		
		[Column(Storage="_author", DbType="VarChar(128)")]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[Column(Storage="_author_email", DbType="VarChar(128)")]
		public string author_email
		{
			get
			{
				return this._author_email;
			}
			set
			{
				if ((this._author_email != value))
				{
					this.Onauthor_emailChanging(value);
					this.SendPropertyChanging();
					this._author_email = value;
					this.SendPropertyChanged("author_email");
					this.Onauthor_emailChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="VarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_settings", DbType="VarChar(MAX)")]
		public string settings
		{
			get
			{
				return this._settings;
			}
			set
			{
				if ((this._settings != value))
				{
					this.OnsettingsChanging(value);
					this.SendPropertyChanging();
					this._settings = value;
					this.SendPropertyChanged("settings");
					this.OnsettingsChanged();
				}
			}
		}
		
		[Column(Storage="_views", DbType="VarChar(MAX)")]
		public string views
		{
			get
			{
				return this._views;
			}
			set
			{
				if ((this._views != value))
				{
					this.OnviewsChanging(value);
					this.SendPropertyChanging();
					this._views = value;
					this.SendPropertyChanged("views");
					this.OnviewsChanged();
				}
			}
		}
		
		[Column(Storage="_version", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		[Column(Storage="_height", DbType="Int NOT NULL")]
		public int height
		{
			get
			{
				return this._height;
			}
			set
			{
				if ((this._height != value))
				{
					this.OnheightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("height");
					this.OnheightChanged();
				}
			}
		}
		
		[Column(Storage="_scrolling", DbType="Int NOT NULL")]
		public int scrolling
		{
			get
			{
				return this._scrolling;
			}
			set
			{
				if ((this._scrolling != value))
				{
					this.OnscrollingChanging(value);
					this.SendPropertyChanging();
					this._scrolling = value;
					this.SendPropertyChanged("scrolling");
					this.OnscrollingChanged();
				}
			}
		}
		
		[Column(Storage="_modified", DbType="BigInt NOT NULL")]
		public long modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[Association(Name="application_activity", Storage="_activities", ThisKey="id", OtherKey="app_id")]
		public EntitySet<activity> activities
		{
			get
			{
				return this._activities;
			}
			set
			{
				this._activities.Assign(value);
			}
		}
		
		[Association(Name="application_application_setting", Storage="_application_settings", ThisKey="id", OtherKey="application_id")]
		public EntitySet<application_setting> application_settings
		{
			get
			{
				return this._application_settings;
			}
			set
			{
				this._application_settings.Assign(value);
			}
		}
		
		[Association(Name="application_person_application", Storage="_person_applications", ThisKey="id", OtherKey="application_id")]
		public EntitySet<person_application> person_applications
		{
			get
			{
				return this._person_applications;
			}
			set
			{
				this._person_applications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_activities(activity entity)
		{
			this.SendPropertyChanging();
			entity.application = this;
		}
		
		private void detach_activities(activity entity)
		{
			this.SendPropertyChanging();
			entity.application = null;
		}
		
		private void attach_application_settings(application_setting entity)
		{
			this.SendPropertyChanging();
			entity.application = this;
		}
		
		private void detach_application_settings(application_setting entity)
		{
			this.SendPropertyChanging();
			entity.application = null;
		}
		
		private void attach_person_applications(person_application entity)
		{
			this.SendPropertyChanging();
			entity.application = this;
		}
		
		private void detach_person_applications(person_application entity)
		{
			this.SendPropertyChanging();
			entity.application = null;
		}
	}
	
	[Table(Name="dbo.authenticated")]
	public partial class authenticated : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _person_id;
		
		private string _hash;
		
		private EntityRef<person> _person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onperson_idChanging(int value);
    partial void Onperson_idChanged();
    partial void OnhashChanging(string value);
    partial void OnhashChanged();
    #endregion
		
		public authenticated()
		{
			this._person = default(EntityRef<person>);
			OnCreated();
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					if (this._person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onperson_idChanging(value);
					this.SendPropertyChanging();
					this._person_id = value;
					this.SendPropertyChanged("person_id");
					this.Onperson_idChanged();
				}
			}
		}
		
		[Column(Storage="_hash", DbType="VarChar(41) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string hash
		{
			get
			{
				return this._hash;
			}
			set
			{
				if ((this._hash != value))
				{
					this.OnhashChanging(value);
					this.SendPropertyChanging();
					this._hash = value;
					this.SendPropertyChanged("hash");
					this.OnhashChanged();
				}
			}
		}
		
		[Association(Name="person_authenticated", Storage="_person", ThisKey="person_id", OtherKey="id", IsForeignKey=true)]
		public person person
		{
			get
			{
				return this._person.Entity;
			}
			set
			{
				person previousValue = this._person.Entity;
				if (((previousValue != value) 
							|| (this._person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._person.Entity = null;
						previousValue.authenticateds.Remove(this);
					}
					this._person.Entity = value;
					if ((value != null))
					{
						value.authenticateds.Add(this);
						this._person_id = value.id;
					}
					else
					{
						this._person_id = default(int);
					}
					this.SendPropertyChanged("person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.friend_requests")]
	public partial class friend_request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _person_id;
		
		private int _friend_id;
		
		private EntityRef<person> _person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onperson_idChanging(int value);
    partial void Onperson_idChanged();
    partial void Onfriend_idChanging(int value);
    partial void Onfriend_idChanged();
    #endregion
		
		public friend_request()
		{
			this._person = default(EntityRef<person>);
			OnCreated();
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					if (this._person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onperson_idChanging(value);
					this.SendPropertyChanging();
					this._person_id = value;
					this.SendPropertyChanged("person_id");
					this.Onperson_idChanged();
				}
			}
		}
		
		[Column(Storage="_friend_id", DbType="Int NOT NULL")]
		public int friend_id
		{
			get
			{
				return this._friend_id;
			}
			set
			{
				if ((this._friend_id != value))
				{
					this.Onfriend_idChanging(value);
					this.SendPropertyChanging();
					this._friend_id = value;
					this.SendPropertyChanged("friend_id");
					this.Onfriend_idChanged();
				}
			}
		}
		
		[Association(Name="person_friend_request", Storage="_person", ThisKey="person_id", OtherKey="id", IsForeignKey=true)]
		public person person
		{
			get
			{
				return this._person.Entity;
			}
			set
			{
				person previousValue = this._person.Entity;
				if (((previousValue != value) 
							|| (this._person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._person.Entity = null;
						previousValue.friend_request = null;
					}
					this._person.Entity = value;
					if ((value != null))
					{
						value.friend_request = this;
						this._person_id = value.id;
					}
					else
					{
						this._person_id = default(int);
					}
					this.SendPropertyChanged("person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.friends")]
	public partial class friend : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _person_id;
		
		private int _friend_id;
		
		private EntityRef<person> _person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onperson_idChanging(int value);
    partial void Onperson_idChanged();
    partial void Onfriend_idChanging(int value);
    partial void Onfriend_idChanged();
    #endregion
		
		public friend()
		{
			this._person = default(EntityRef<person>);
			OnCreated();
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					if (this._person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onperson_idChanging(value);
					this.SendPropertyChanging();
					this._person_id = value;
					this.SendPropertyChanged("person_id");
					this.Onperson_idChanged();
				}
			}
		}
		
		[Column(Storage="_friend_id", DbType="Int NOT NULL")]
		public int friend_id
		{
			get
			{
				return this._friend_id;
			}
			set
			{
				if ((this._friend_id != value))
				{
					this.Onfriend_idChanging(value);
					this.SendPropertyChanging();
					this._friend_id = value;
					this.SendPropertyChanged("friend_id");
					this.Onfriend_idChanged();
				}
			}
		}
		
		[Association(Name="person_friend", Storage="_person", ThisKey="person_id", OtherKey="id", IsForeignKey=true)]
		public person person
		{
			get
			{
				return this._person.Entity;
			}
			set
			{
				person previousValue = this._person.Entity;
				if (((previousValue != value) 
							|| (this._person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._person.Entity = null;
						previousValue.friend = null;
					}
					this._person.Entity = value;
					if ((value != null))
					{
						value.friend = this;
						this._person_id = value.id;
					}
					else
					{
						this._person_id = default(int);
					}
					this.SendPropertyChanged("person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.languages")]
	public partial class language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public language()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_code", DbType="VarChar(4)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(32)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.messages")]
	public partial class message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _from;
		
		private int _to;
		
		private string _title;
		
		private string _body;
		
		private string _read;
		
		private string _to_deleted;
		
		private string _from_deleted;
		
		private long _created;
		
		private EntityRef<person> _person;
		
		private EntityRef<person> _person1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfromChanging(int value);
    partial void OnfromChanged();
    partial void OntoChanging(int value);
    partial void OntoChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OnreadChanging(string value);
    partial void OnreadChanged();
    partial void Onto_deletedChanging(string value);
    partial void Onto_deletedChanged();
    partial void Onfrom_deletedChanging(string value);
    partial void Onfrom_deletedChanged();
    partial void OncreatedChanging(long value);
    partial void OncreatedChanged();
    #endregion
		
		public message()
		{
			this._person = default(EntityRef<person>);
			this._person1 = default(EntityRef<person>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Name="[from]", Storage="_from", DbType="Int NOT NULL")]
		public int from
		{
			get
			{
				return this._from;
			}
			set
			{
				if ((this._from != value))
				{
					this.OnfromChanging(value);
					this.SendPropertyChanging();
					this._from = value;
					this.SendPropertyChanged("from");
					this.OnfromChanged();
				}
			}
		}
		
		[Column(Name="[to]", Storage="_to", DbType="Int NOT NULL")]
		public int to
		{
			get
			{
				return this._to;
			}
			set
			{
				if ((this._to != value))
				{
					this.OntoChanging(value);
					this.SendPropertyChanging();
					this._to = value;
					this.SendPropertyChanged("to");
					this.OntoChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_body", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[Column(Name="[read]", Storage="_read", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string read
		{
			get
			{
				return this._read;
			}
			set
			{
				if ((this._read != value))
				{
					this.OnreadChanging(value);
					this.SendPropertyChanging();
					this._read = value;
					this.SendPropertyChanged("read");
					this.OnreadChanged();
				}
			}
		}
		
		[Column(Storage="_to_deleted", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string to_deleted
		{
			get
			{
				return this._to_deleted;
			}
			set
			{
				if ((this._to_deleted != value))
				{
					this.Onto_deletedChanging(value);
					this.SendPropertyChanging();
					this._to_deleted = value;
					this.SendPropertyChanged("to_deleted");
					this.Onto_deletedChanged();
				}
			}
		}
		
		[Column(Storage="_from_deleted", DbType="NVarChar(3)")]
		public string from_deleted
		{
			get
			{
				return this._from_deleted;
			}
			set
			{
				if ((this._from_deleted != value))
				{
					this.Onfrom_deletedChanging(value);
					this.SendPropertyChanging();
					this._from_deleted = value;
					this.SendPropertyChanged("from_deleted");
					this.Onfrom_deletedChanged();
				}
			}
		}
		
		[Column(Storage="_created", DbType="BigInt NOT NULL")]
		public long created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[Association(Name="person_message", Storage="_person", ThisKey="from", OtherKey="id", IsForeignKey=true)]
		public person person
		{
			get
			{
				return this._person.Entity;
			}
			set
			{
				person previousValue = this._person.Entity;
				if (((previousValue != value) 
							|| (this._person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._person.Entity = null;
						previousValue.messages.Remove(this);
					}
					this._person.Entity = value;
					if ((value != null))
					{
						value.messages.Add(this);
						this._from = value.id;
					}
					else
					{
						this._from = default(int);
					}
					this.SendPropertyChanged("person");
				}
			}
		}
		
		[Association(Name="person_message1", Storage="_person1", ThisKey="to", OtherKey="id", IsForeignKey=true)]
		public person person1
		{
			get
			{
				return this._person1.Entity;
			}
			set
			{
				person previousValue = this._person1.Entity;
				if (((previousValue != value) 
							|| (this._person1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._person1.Entity = null;
						previousValue.messages1.Remove(this);
					}
					this._person1.Entity = value;
					if ((value != null))
					{
						value.messages1.Add(this);
						this._to = value.id;
					}
					else
					{
						this._to = default(int);
					}
					this.SendPropertyChanged("person1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oauth_consumer")]
	public partial class oauth_consumer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _user_id;
		
		private int _app_id;
		
		private string _consumer_key;
		
		private string _consumer_secret;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onapp_idChanging(int value);
    partial void Onapp_idChanged();
    partial void Onconsumer_keyChanging(string value);
    partial void Onconsumer_keyChanged();
    partial void Onconsumer_secretChanging(string value);
    partial void Onconsumer_secretChanged();
    #endregion
		
		public oauth_consumer()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[Column(Storage="_app_id", DbType="Int NOT NULL")]
		public int app_id
		{
			get
			{
				return this._app_id;
			}
			set
			{
				if ((this._app_id != value))
				{
					this.Onapp_idChanging(value);
					this.SendPropertyChanging();
					this._app_id = value;
					this.SendPropertyChanged("app_id");
					this.Onapp_idChanged();
				}
			}
		}
		
		[Column(Storage="_consumer_key", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string consumer_key
		{
			get
			{
				return this._consumer_key;
			}
			set
			{
				if ((this._consumer_key != value))
				{
					this.Onconsumer_keyChanging(value);
					this.SendPropertyChanging();
					this._consumer_key = value;
					this.SendPropertyChanged("consumer_key");
					this.Onconsumer_keyChanged();
				}
			}
		}
		
		[Column(Storage="_consumer_secret", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string consumer_secret
		{
			get
			{
				return this._consumer_secret;
			}
			set
			{
				if ((this._consumer_secret != value))
				{
					this.Onconsumer_secretChanging(value);
					this.SendPropertyChanging();
					this._consumer_secret = value;
					this.SendPropertyChanged("consumer_secret");
					this.Onconsumer_secretChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oauth_nonce")]
	public partial class oauth_nonce : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nonce;
		
		private long _nonce_timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnonceChanging(string value);
    partial void OnnonceChanged();
    partial void Onnonce_timestampChanging(long value);
    partial void Onnonce_timestampChanged();
    #endregion
		
		public oauth_nonce()
		{
			OnCreated();
		}
		
		[Column(Storage="_nonce", DbType="VarChar(64) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nonce
		{
			get
			{
				return this._nonce;
			}
			set
			{
				if ((this._nonce != value))
				{
					this.OnnonceChanging(value);
					this.SendPropertyChanging();
					this._nonce = value;
					this.SendPropertyChanged("nonce");
					this.OnnonceChanged();
				}
			}
		}
		
		[Column(Storage="_nonce_timestamp", DbType="BigInt NOT NULL")]
		public long nonce_timestamp
		{
			get
			{
				return this._nonce_timestamp;
			}
			set
			{
				if ((this._nonce_timestamp != value))
				{
					this.Onnonce_timestampChanging(value);
					this.SendPropertyChanging();
					this._nonce_timestamp = value;
					this.SendPropertyChanged("nonce_timestamp");
					this.Onnonce_timestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oauth_token")]
	public partial class oauth_token : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _user_id;
		
		private string _consumer_key;
		
		private string _type;
		
		private string _token_key;
		
		private string _token_secret;
		
		private int _authorized;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(long value);
    partial void Onuser_idChanged();
    partial void Onconsumer_keyChanging(string value);
    partial void Onconsumer_keyChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void Ontoken_keyChanging(string value);
    partial void Ontoken_keyChanged();
    partial void Ontoken_secretChanging(string value);
    partial void Ontoken_secretChanged();
    partial void OnauthorizedChanging(int value);
    partial void OnauthorizedChanged();
    #endregion
		
		public oauth_token()
		{
			OnCreated();
		}
		
		[Column(Storage="_user_id", DbType="BigInt NOT NULL")]
		public long user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[Column(Storage="_consumer_key", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string consumer_key
		{
			get
			{
				return this._consumer_key;
			}
			set
			{
				if ((this._consumer_key != value))
				{
					this.Onconsumer_keyChanging(value);
					this.SendPropertyChanging();
					this._consumer_key = value;
					this.SendPropertyChanged("consumer_key");
					this.Onconsumer_keyChanged();
				}
			}
		}
		
		[Column(Storage="_type", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[Column(Storage="_token_key", DbType="VarChar(64) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string token_key
		{
			get
			{
				return this._token_key;
			}
			set
			{
				if ((this._token_key != value))
				{
					this.Ontoken_keyChanging(value);
					this.SendPropertyChanging();
					this._token_key = value;
					this.SendPropertyChanged("token_key");
					this.Ontoken_keyChanged();
				}
			}
		}
		
		[Column(Storage="_token_secret", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string token_secret
		{
			get
			{
				return this._token_secret;
			}
			set
			{
				if ((this._token_secret != value))
				{
					this.Ontoken_secretChanging(value);
					this.SendPropertyChanging();
					this._token_secret = value;
					this.SendPropertyChanged("token_secret");
					this.Ontoken_secretChanged();
				}
			}
		}
		
		[Column(Storage="_authorized", DbType="Int NOT NULL")]
		public int authorized
		{
			get
			{
				return this._authorized;
			}
			set
			{
				if ((this._authorized != value))
				{
					this.OnauthorizedChanging(value);
					this.SendPropertyChanging();
					this._authorized = value;
					this.SendPropertyChanged("authorized");
					this.OnauthorizedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.organizations")]
	public partial class organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _address_id;
		
		private string _description;
		
		private System.Nullable<long> _end_date;
		
		private string _field;
		
		private string _name;
		
		private string _salary;
		
		private System.Nullable<long> _start_date;
		
		private string _sub_field;
		
		private string _title;
		
		private string _webpage;
		
		private EntityRef<address> _address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onaddress_idChanging(System.Nullable<int> value);
    partial void Onaddress_idChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onend_dateChanging(System.Nullable<long> value);
    partial void Onend_dateChanged();
    partial void OnfieldChanging(string value);
    partial void OnfieldChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsalaryChanging(string value);
    partial void OnsalaryChanged();
    partial void Onstart_dateChanging(System.Nullable<long> value);
    partial void Onstart_dateChanged();
    partial void Onsub_fieldChanging(string value);
    partial void Onsub_fieldChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnwebpageChanging(string value);
    partial void OnwebpageChanged();
    #endregion
		
		public organization()
		{
			this._address = default(EntityRef<address>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_address_id", DbType="Int")]
		public System.Nullable<int> address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					if (this._address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaddress_idChanging(value);
					this.SendPropertyChanging();
					this._address_id = value;
					this.SendPropertyChanged("address_id");
					this.Onaddress_idChanged();
				}
			}
		}
		
		[Column(Storage="_description", DbType="VarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_end_date", DbType="BigInt")]
		public System.Nullable<long> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[Column(Storage="_field", DbType="VarChar(128)")]
		public string field
		{
			get
			{
				return this._field;
			}
			set
			{
				if ((this._field != value))
				{
					this.OnfieldChanging(value);
					this.SendPropertyChanging();
					this._field = value;
					this.SendPropertyChanged("field");
					this.OnfieldChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(128)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_salary", DbType="VarChar(64)")]
		public string salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this.OnsalaryChanging(value);
					this.SendPropertyChanging();
					this._salary = value;
					this.SendPropertyChanged("salary");
					this.OnsalaryChanged();
				}
			}
		}
		
		[Column(Storage="_start_date", DbType="BigInt")]
		public System.Nullable<long> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[Column(Storage="_sub_field", DbType="VarChar(64)")]
		public string sub_field
		{
			get
			{
				return this._sub_field;
			}
			set
			{
				if ((this._sub_field != value))
				{
					this.Onsub_fieldChanging(value);
					this.SendPropertyChanging();
					this._sub_field = value;
					this.SendPropertyChanged("sub_field");
					this.Onsub_fieldChanged();
				}
			}
		}
		
		[Column(Storage="_title", DbType="VarChar(64)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[Column(Storage="_webpage", DbType="VarChar(128)")]
		public string webpage
		{
			get
			{
				return this._webpage;
			}
			set
			{
				if ((this._webpage != value))
				{
					this.OnwebpageChanging(value);
					this.SendPropertyChanging();
					this._webpage = value;
					this.SendPropertyChanged("webpage");
					this.OnwebpageChanged();
				}
			}
		}
		
		[Association(Name="address_organization", Storage="_address", ThisKey="address_id", OtherKey="id", IsForeignKey=true)]
		public address address
		{
			get
			{
				return this._address.Entity;
			}
			set
			{
				address previousValue = this._address.Entity;
				if (((previousValue != value) 
							|| (this._address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._address.Entity = null;
						previousValue.organizations.Remove(this);
					}
					this._address.Entity = value;
					if ((value != null))
					{
						value.organizations.Add(this);
						this._address_id = value.id;
					}
					else
					{
						this._address_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("address");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.person_activities")]
	public partial class person_activity
	{
		
		private int _person_id;
		
		private string _activity;
		
		public person_activity()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_activity", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string activity
		{
			get
			{
				return this._activity;
			}
			set
			{
				if ((this._activity != value))
				{
					this._activity = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_addresses")]
	public partial class person_address
	{
		
		private int _person_id;
		
		private int _address_id;
		
		public person_address()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_address_id", DbType="Int NOT NULL")]
		public int address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					this._address_id = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_applications")]
	public partial class person_application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _person_id;
		
		private int _application_id;
		
		private EntityRef<application> _application;
		
		private EntityRef<person> _person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onperson_idChanging(int value);
    partial void Onperson_idChanged();
    partial void Onapplication_idChanging(int value);
    partial void Onapplication_idChanged();
    #endregion
		
		public person_application()
		{
			this._application = default(EntityRef<application>);
			this._person = default(EntityRef<person>);
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					if (this._person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onperson_idChanging(value);
					this.SendPropertyChanging();
					this._person_id = value;
					this.SendPropertyChanged("person_id");
					this.Onperson_idChanged();
				}
			}
		}
		
		[Column(Storage="_application_id", DbType="Int NOT NULL")]
		public int application_id
		{
			get
			{
				return this._application_id;
			}
			set
			{
				if ((this._application_id != value))
				{
					if (this._application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onapplication_idChanging(value);
					this.SendPropertyChanging();
					this._application_id = value;
					this.SendPropertyChanged("application_id");
					this.Onapplication_idChanged();
				}
			}
		}
		
		[Association(Name="application_person_application", Storage="_application", ThisKey="application_id", OtherKey="id", IsForeignKey=true)]
		public application application
		{
			get
			{
				return this._application.Entity;
			}
			set
			{
				application previousValue = this._application.Entity;
				if (((previousValue != value) 
							|| (this._application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._application.Entity = null;
						previousValue.person_applications.Remove(this);
					}
					this._application.Entity = value;
					if ((value != null))
					{
						value.person_applications.Add(this);
						this._application_id = value.id;
					}
					else
					{
						this._application_id = default(int);
					}
					this.SendPropertyChanged("application");
				}
			}
		}
		
		[Association(Name="person_person_application", Storage="_person", ThisKey="person_id", OtherKey="id", IsForeignKey=true)]
		public person person
		{
			get
			{
				return this._person.Entity;
			}
			set
			{
				person previousValue = this._person.Entity;
				if (((previousValue != value) 
							|| (this._person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._person.Entity = null;
						previousValue.person_applications.Remove(this);
					}
					this._person.Entity = value;
					if ((value != null))
					{
						value.person_applications.Add(this);
						this._person_id = value.id;
					}
					else
					{
						this._person_id = default(int);
					}
					this.SendPropertyChanged("person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.person_body_type")]
	public partial class person_body_type
	{
		
		private int _person_id;
		
		private string _build;
		
		private string _eye_color;
		
		private string _hair_color;
		
		private System.Nullable<int> _height;
		
		private System.Nullable<int> _weight;
		
		public person_body_type()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_build", DbType="VarChar(64)")]
		public string build
		{
			get
			{
				return this._build;
			}
			set
			{
				if ((this._build != value))
				{
					this._build = value;
				}
			}
		}
		
		[Column(Storage="_eye_color", DbType="VarChar(64)")]
		public string eye_color
		{
			get
			{
				return this._eye_color;
			}
			set
			{
				if ((this._eye_color != value))
				{
					this._eye_color = value;
				}
			}
		}
		
		[Column(Storage="_hair_color", DbType="VarChar(64)")]
		public string hair_color
		{
			get
			{
				return this._hair_color;
			}
			set
			{
				if ((this._hair_color != value))
				{
					this._hair_color = value;
				}
			}
		}
		
		[Column(Storage="_height", DbType="Int")]
		public System.Nullable<int> height
		{
			get
			{
				return this._height;
			}
			set
			{
				if ((this._height != value))
				{
					this._height = value;
				}
			}
		}
		
		[Column(Storage="_weight", DbType="Int")]
		public System.Nullable<int> weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this._weight = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_books")]
	public partial class person_book
	{
		
		private int _person_id;
		
		private string _book;
		
		public person_book()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_book", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string book
		{
			get
			{
				return this._book;
			}
			set
			{
				if ((this._book != value))
				{
					this._book = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_cars")]
	public partial class person_car
	{
		
		private int _person_id;
		
		private string _car;
		
		public person_car()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_car", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string car
		{
			get
			{
				return this._car;
			}
			set
			{
				if ((this._car != value))
				{
					this._car = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_current_location")]
	public partial class person_current_location
	{
		
		private int _person_id;
		
		private int _address_id;
		
		public person_current_location()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_address_id", DbType="Int NOT NULL")]
		public int address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					this._address_id = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_emails")]
	public partial class person_email
	{
		
		private int _person_id;
		
		private string _address;
		
		private string _email_type;
		
		public person_email()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_address", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this._address = value;
				}
			}
		}
		
		[Column(Storage="_email_type", DbType="VarChar(128)")]
		public string email_type
		{
			get
			{
				return this._email_type;
			}
			set
			{
				if ((this._email_type != value))
				{
					this._email_type = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_food")]
	public partial class person_food
	{
		
		private int _person_id;
		
		private string _food;
		
		public person_food()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_food", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string food
		{
			get
			{
				return this._food;
			}
			set
			{
				if ((this._food != value))
				{
					this._food = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_heroes")]
	public partial class person_heroe
	{
		
		private int _person_id;
		
		private string _hero;
		
		public person_heroe()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_hero", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string hero
		{
			get
			{
				return this._hero;
			}
			set
			{
				if ((this._hero != value))
				{
					this._hero = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_interests")]
	public partial class person_interest
	{
		
		private int _person_id;
		
		private string _interest;
		
		public person_interest()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_interest", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string interest
		{
			get
			{
				return this._interest;
			}
			set
			{
				if ((this._interest != value))
				{
					this._interest = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_jobs")]
	public partial class person_job
	{
		
		private int _person_id;
		
		private int _organization_id;
		
		public person_job()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_organization_id", DbType="Int NOT NULL")]
		public int organization_id
		{
			get
			{
				return this._organization_id;
			}
			set
			{
				if ((this._organization_id != value))
				{
					this._organization_id = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_languages_spoken")]
	public partial class person_languages_spoken
	{
		
		private int _person_id;
		
		private int _language_id;
		
		public person_languages_spoken()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_language_id", DbType="Int NOT NULL")]
		public int language_id
		{
			get
			{
				return this._language_id;
			}
			set
			{
				if ((this._language_id != value))
				{
					this._language_id = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_movies")]
	public partial class person_movy
	{
		
		private int _person_id;
		
		private string _movie;
		
		public person_movy()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_movie", DbType="VarChar(128)")]
		public string movie
		{
			get
			{
				return this._movie;
			}
			set
			{
				if ((this._movie != value))
				{
					this._movie = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_music")]
	public partial class person_music
	{
		
		private int _person_id;
		
		private string _music;
		
		public person_music()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_music", DbType="VarChar(128)")]
		public string music
		{
			get
			{
				return this._music;
			}
			set
			{
				if ((this._music != value))
				{
					this._music = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_phone_numbers")]
	public partial class person_phone_number
	{
		
		private int _person_id;
		
		private string _number;
		
		private string _number_type;
		
		public person_phone_number()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_number", DbType="VarChar(64)")]
		public string number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this._number = value;
				}
			}
		}
		
		[Column(Storage="_number_type", DbType="VarChar(128)")]
		public string number_type
		{
			get
			{
				return this._number_type;
			}
			set
			{
				if ((this._number_type != value))
				{
					this._number_type = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_quotes")]
	public partial class person_quote
	{
		
		private int _person_id;
		
		private string _quote;
		
		public person_quote()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_quote", DbType="VarChar(MAX)")]
		public string quote
		{
			get
			{
				return this._quote;
			}
			set
			{
				if ((this._quote != value))
				{
					this._quote = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_schools")]
	public partial class person_school
	{
		
		private int _person_id;
		
		private int _organization_id;
		
		public person_school()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_organization_id", DbType="Int NOT NULL")]
		public int organization_id
		{
			get
			{
				return this._organization_id;
			}
			set
			{
				if ((this._organization_id != value))
				{
					this._organization_id = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_sports")]
	public partial class person_sport
	{
		
		private int _person_id;
		
		private string _sport;
		
		public person_sport()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_sport", DbType="VarChar(128)")]
		public string sport
		{
			get
			{
				return this._sport;
			}
			set
			{
				if ((this._sport != value))
				{
					this._sport = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_tags")]
	public partial class person_tag
	{
		
		private int _person_id;
		
		private string _tag;
		
		public person_tag()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_tag", DbType="VarChar(128)")]
		public string tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if ((this._tag != value))
				{
					this._tag = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_turn_offs")]
	public partial class person_turn_off
	{
		
		private int _person_id;
		
		private string _turn_off;
		
		public person_turn_off()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_turn_off", DbType="VarChar(128)")]
		public string turn_off
		{
			get
			{
				return this._turn_off;
			}
			set
			{
				if ((this._turn_off != value))
				{
					this._turn_off = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_turn_ons")]
	public partial class person_turn_on
	{
		
		private int _person_id;
		
		private string _turn_on;
		
		public person_turn_on()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_turn_on", DbType="VarChar(128)")]
		public string turn_on
		{
			get
			{
				return this._turn_on;
			}
			set
			{
				if ((this._turn_on != value))
				{
					this._turn_on = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_tv_shows")]
	public partial class person_tv_show
	{
		
		private int _person_id;
		
		private string _tv_show;
		
		public person_tv_show()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_tv_show", DbType="VarChar(128)")]
		public string tv_show
		{
			get
			{
				return this._tv_show;
			}
			set
			{
				if ((this._tv_show != value))
				{
					this._tv_show = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.person_urls")]
	public partial class person_url
	{
		
		private int _person_id;
		
		private string _url;
		
		public person_url()
		{
		}
		
		[Column(Storage="_person_id", DbType="Int NOT NULL")]
		public int person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this._person_id = value;
				}
			}
		}
		
		[Column(Storage="_url", DbType="VarChar(128)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this._url = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
